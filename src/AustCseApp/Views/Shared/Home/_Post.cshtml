@using System.Security.Claims;
@model Post

@{
    int loggedInUserId = int.TryParse(User.FindFirstValue(ClaimTypes.NameIdentifier), out int result) ? result : 0;
    TimeSpan timeSpanSincePosted = DateTime.UtcNow.Subtract(Model.DateCreated);

    string displayTime = timeSpanSincePosted switch
    {
        var t when t.TotalDays >= 1 => $"{(int)t.TotalDays}d ago",
        var t when t.TotalHours >= 1 => $"{(int)t.TotalHours}h ago",
        var t when t.TotalMinutes >= 1 => $"{(int)t.TotalMinutes}m ago",
        _ => "Just now"
    };
    bool isFavorited = Model.Favorites.Any(n => n.UserId == loggedInUserId);
    bool isLiked = Model.Likes.Any(n => n.UserId == loggedInUserId);
    bool isPrivate = Model.IsPrivate == true && Model.UserId == loggedInUserId;

    // string defaultUserPicture = "~/images/avatar/user.png";
    bool showAllComments = ViewData["ShowAllComment"] as bool? ?? false;
}

<div class="bg-white rounded-xl shadow-sm text-sm font-medium border1">

    @* Post heading *@
    <div class="flex gap-3 sm:p-4 p-2.5 text-sm font-medium">
        <a asp-controller="Users" asp-action="Details" asp-route-userId="@Model.UserId">
            <img src="@(!string.IsNullOrEmpty(Model.User.ProfilePictureUrl) ? Url.Content("~/"+Model.User.ProfilePictureUrl) : Url.Content("~/images/avatar/user.png"))" class="w-9 h-9 rounded-full" />
        </a>

        <div class="flex-1">
            <a asp-controller="Users" asp-action="Details" asp-route-userId="@Model.UserId">
                <h4 class="text-black">@((Model.User?.FullName) ?? "Unknown User") <span class="text-green-600"> > CSE @Model.Batch </span></h4>
                

                <!-- meta: time • batch -->
                <div class="text-xs text-gray-500/80 flex items-center gap-2">
                    <span title="@Model.DateCreated.ToString("mm/dd/yyyy HH:mm")">@displayTime</span>
                    <span class="w-1 h-1 rounded-full bg-gray-300"></span>
                    @if (!string.IsNullOrWhiteSpace(Model.Batch))
                    {
                        <span class="w-1 h-1 rounded-full bg-gray-300"></span>
                        
                    }
                </div>

                <!-- tags (chips) -->
                <div class="mt-1.5 flex flex-wrap gap-1.5">
                    <span class="px-2 py-0.5 rounded-full text-[11px] bg-sky-50 text-sky-700 border border-sky-100">@Model.Tag</span>
                </div>
            </a>
        </div>

        <div class="-mr-1">
            <button type="button" class="button-icon w-8 h-8"> <ion-icon class="text-xl" name="ellipsis-horizontal"></ion-icon> </button>
            <div class="w-[245px] post-options-dropdown" uk-dropdown="pos: bottom-right; animation: uk-animation-scale-up uk-transform-origin-top-right; animate-out: true; mode: click">
                <!-- Post Set Public/Private Button-->
                @if (Model.UserId == loggedInUserId)
                {
                    <form asp-controller="Home" asp-action="TogglePostVisibility">
                        <input type="hidden" name="postId" value="@Model.Id" />
                        <button type="submit" class="hover:!bg-red-50 icon-link">
                            <ion-icon name="@(isPrivate ? "lock-open-outline" : "lock-closed-outline")"></ion-icon>  Set as @(isPrivate ? "public" : "private")
                        </button>
                    </form>


                    <!-- Post Delete Button-->
                    <button type="button" onclick="openPostDeleteConfirmation('@Model.Id')" class="text-red-400 hover:!bg-red-50 delete-post-btn">
                        <ion-icon name="trash-bin-outline"></ion-icon>  Delete Post
                    </button>

                }
    

                @* <form asp-controller="Home" asp-action="Report">
                    <input type="hidden" name="postId" />
                    <button type="submit" class="hover:!bg-red-50 icon-link">
                        <ion-icon class="text-xl shrink-0" name="flag-outline"></ion-icon>  Report
                    </button>
                </form> *@

            </div>
        </div>

    </div>

    @* Post content text *@
    <a asp-controller="Home" asp-action="Details" asp-route-postId="@Model.Id">
        <div class="sm:px-4 p-2.5 pt-0 w-full">
            <p class="font-normal ">
                @Model.Content
            </p>
        </div>
    </a>

    @* Post image  *@
    @if (!string.IsNullOrEmpty(Model.ImageUrl))
    {
        <a asp-controller="Home" asp-action="Details" asp-route-postId="@Model.Id">
            <div class="relative w-full h-full">
                <img src="@Url.Content("~/" + Model.ImageUrl)" class="sm:rounded-lg w-full h-full object-cover" />
            </div>
        </a>
    }

    @* Icons *@
    <div class="sm:p-4 p-2.5 flex items-center gap-4 text-xs font-semibold">

        <div class="flex items-center gap-2.5">
            <form asp-controller="Home" asp-action="TogglePostLike">
                <input type="hidden" name="postId" value="@Model.Id"/>
                <button type="submit" class="button-icon @(isLiked ? "text-green-500 bg-green-100" : "")">
                    <ion-icon class="text-lg" name="@(isLiked ? "heart" : "heart-outline")"></ion-icon>
                </button>
            </form>
            <a href="#">@Model.Likes.Count</a>
        </div>

        <div class="flex items-center gap-3">
            <a class="button-icon">
                <ion-icon class="text-lg" name="chatbubble-ellipses-outline"></ion-icon>
            </a>
            <!-- count total comments for this post -->
            <a href="#">@Model.Comments.Count</a>
        </div>

        <div class="ml-auto"></div>

        <div class="flex items-center gap-2">
            <form asp-controller="Home" asp-action="TogglePostFavorite">
                <input type="hidden" name="postId" value="@Model.Id" />
                <button type="submit" class="button-icon ml-auto @(isFavorited ? "text-green-500 bt-green-100" : "")">
                    <ion-icon class="text-lg" name="@(isFavorited ? "bookmark" : "bookmark-outline")"></ion-icon>
                </button>
            </form>
            @if (Model.Favorites.Count > 0)
            {
                <a href="#">@Model.Favorites.Count</a>
            }
        </div>
    </div>

    @* Add comment *@
    <div>
        <div class="p-2.5 border-t border-gray-100 font-normal space-y-3 relative">
            <!-- sob gulo comment ei loop diye access kora hoise-->
            @foreach (var comment in showAllComments
                        ? Model.Comments.OrderByDescending(n => n.DateCreated)
                        : Model.Comments.OrderByDescending(n => n.DateCreated).Take(2))
            {
                TimeSpan commentTimeSpanSincePosted = DateTime.UtcNow.Subtract(comment.DateCreated);

                string commentDisplayTime = commentTimeSpanSincePosted switch
                {
                    var t when t.TotalDays >= 1 => $"{(int)t.TotalDays}d ago",
                    var t when t.TotalHours >= 1 => $"{(int)t.TotalHours}h ago",
                    var t when t.TotalMinutes >= 1 => $"{(int)t.TotalMinutes}m ago",
                    _ => "Just now"
                };

                <div class="flex items-start gap-3 relative">
                    <a asp-controller="Users" asp-action="Details" asp-route-userId="@comment.UserId">
                        <img src="@(!string.IsNullOrEmpty(comment.User.ProfilePictureUrl) ? Url.Content("~/" + comment.User.ProfilePictureUrl) : Url.Content("~/images/avatar/user.png"))" class="w-6 h-6 mt-1 rounded-full" />
                    </a>
                    <div class="flex-1">
                        <div class="flex justify-content-between">
                            <a asp-controller="Users" asp-action="Details" asp-route-userId="@comment.UserId" class="text-black font-medium inline-block flex-grow">
                                @comment.User?.FullName
                            </a>
                            <small>@commentDisplayTime</small>
                        </div>
                        <div class="flex items-center justify-between">
                            <p class="mt-0.5">
                                @comment.Content
                            </p>

                            <form asp-controller="Home" asp-action="RemovePostComment">
                                <input type="hidden" name="commentId" value="@comment.Id" />
                                <button type="submit" class="text-red-500 text-xs ml-2" title="Remove post comment">
                                    <ion-icon name="trash-outline"></ion-icon>
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            }
            @if (Model.Comments.Count >= 3 && !showAllComments)
            {
                <div class="p-1.5">
                    <a asp-controller="Home" asp-action="Details" asp-route-postId="@Model.Id">
                        Show all comments
                    </a>
                </div>
            }
        </div>

        <form asp-controller="Home" asp-action="AddPostComment">
            <div class="sm:px-4 sm:py-3 p-2.5 border-t border-gray-100 flex items-center gap-1">
                <a asp-controller="Users" asp-action="Detalis" asp-route-userId="@Model.UserId">
                    <img src="@(string.IsNullOrEmpty(Model.User.ProfilePictureUrl) ? Url.Content("~/images/avatar/user.png") : Url.Content(Model.User.ProfilePictureUrl))" class="w-6 h-6 rounded-full" />
                </a>

                <input type="hidden" name="postId" value="@Model.Id" />
                <div class="flex-1 relative overflow-hidden h-10">
                    <textarea name="content" placeholder="Add Comment...."
                              rows="1"
                              class="w-full resize-none !bg-transparent px-4 py-2 focus:!border-transparent focus:!ring-transparent"></textarea>
                </div>

                <button type="submit" class="text-sm rounded-full py-1.5 px-3.5 bg-secondery">Comment</button>
            </div>
        </form>
    </div>

</div>